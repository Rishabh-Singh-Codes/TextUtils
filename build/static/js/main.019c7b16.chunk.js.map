{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","title","onClick","toggleMode","id","class","htmlFor","TextForm","useState","text","setText","color","heading","onChange","event","target","value","backgroundColor","rows","disabled","length","newText","showAlert","s","chars","split","i","join","alternateCase","str","ch","inverseCase","filter","element","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.019c7b16.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={{height: '25px'}}>\r\n                {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n                </div>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <span className=\"navbar-brand\" >{props.title}</span>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n          <label class=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'TextUtils',\r\n  aboutText: 'About'\r\n}","import React, { useState } from \"react\";\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Upper-Case\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Lower-Case\", \"success\");\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text-box cleared\", \"danger\");\r\n    }\r\n\r\n    const alternateCase = (s) => {\r\n        let chars = s.toLowerCase().split(\"\");\r\n        for (let i = 0; i < chars.length; i += 2) {\r\n            chars[i] = chars[i].toUpperCase();\r\n        }\r\n        return chars.join(\"\");\r\n\r\n    }\r\n\r\n    const handleAlter = () => {\r\n        let newText = alternateCase(text);\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Alternate-Case\", \"warning\");\r\n    }\r\n\r\n    const inverseCase = (s) => {\r\n        let str = '';\r\n        let i = 0;\r\n\r\n        while (i < s.length) {\r\n            let ch = s.charAt(i);\r\n            if (ch === ch.toUpperCase()) {\r\n                ch = ch.toLowerCase();\r\n            } else {\r\n                ch = ch.toUpperCase();\r\n            }\r\n\r\n            i++;\r\n            str += ch;\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    const handleInverse = () => {\r\n        let newText = inverseCase(text);\r\n        setText(newText);\r\n        props.showAlert(\"Coverted to Inverse-Case\", \"warning\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n\r\n    const handleOnChange = (event) => {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n    return (\r\n        <>\r\n            <div style={{ color: props.mode === \"light\" ? \"#032658\" : \"white\" }}>\r\n                <h1 >{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" onChange={handleOnChange}\r\n                        style={{ backgroundColor: props.mode === \"light\" ? \"white\" : \"#032658\", color: props.mode === \"light\" ? \"#032658\" : \"white\" }}\r\n                        value={text} id=\"myBox\" rows=\"8\" ></textarea>\r\n                </div>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2\" onClick={handleUpClick}>UPPERCASE</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2\" onClick={handleLoClick}>lowercase</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2\" onClick={handleAlter}>AlTeRnAtInG CaSe</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-primary mx-2\" onClick={handleInverse}>iNVERSE cASE</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled={text.length === 0} className=\"btn btn-outline-danger mx-2\" onClick={handleClear}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === \"light\" ? \"#032658\" : \"white\" }} >\r\n                <h3>Text Summary:</h3>\r\n                <p>{text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} Minutes read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Nothing to preview!\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\nimport './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#032658\";\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-4\">\n        <TextForm showAlert={showAlert} heading=\"Enter the Text below to analyse :\" mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}